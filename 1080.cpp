/* 1080. Graduate Admission (30) *//* starting time:2016-9-1 12:36 *//* 13:08 26/30 4 points wrong answer. *//* get no ideal..  */#include<iostream>#include<vector>#include<algorithm>using namespace std;typedef struct Node{	int ge;	int gi;	int sum;	int id;	int choices[5];}Node;bool cmp(const Node &a,const Node &b){	if(a.sum!=b.sum) return a.sum>b.sum;	else return a.ge>b.ge;}int main(){	 freopen("D:\\in.txt","r",stdin);     int n,m,k;	 int ge,gi;	 cin>>n>>m>>k;     vector<int> plan;	 vector<vector<int> >admit;	 vector<Node> vec;	 vec.resize(n);	 plan.resize(m);	 admit.resize(m);	 for(int i=0;i<m;i++) scanf("%d",&plan[i]);	 for(int i=0;i<n;i++)	 {		 scanf("%d%d",&vec[i].ge,&vec[i].gi);		 vec[i].sum=vec[i].ge+vec[i].gi;		 vec[i].id=i;     	 for(int j=0;j<k;j++) scanf("%d",&vec[i].choices[j]);	 }	 sort(vec.begin(),vec.end(),cmp);	 for(int i=0;i<n;i++){		for(int j=0;j<k;j++)		{			int cur= vec[i].choices[j];			if(admit[cur].size()<plan[cur])			{				admit[cur].push_back(vec[i].id);				break;			}			else if(admit[cur].size()>=plan[cur])			{				int last=admit[cur].size()-1;				/* compare with the last applicant's grade */				if(vec[admit[cur][last]].sum==vec[i].sum&&vec[admit[cur][last]].ge==vec[i].ge)				{					admit[cur].push_back(vec[i].id);					break;				}			}		}	 }	 for(int i=0;i<m;i++)	 {		 if(admit[i].size()==0) cout<<endl;		 else		 {		   sort(admit[i].begin(),admit[i].end());		   cout<<admit[i][0];		   for(int j=1;j<admit[i].size();j++)             cout<<" "<<admit[i][j];           cout<<endl;					  } 	 }	 return 0;}/* 30/30 from csdn  */#include <iostream>#include <vector>#include <cstdio>#include <algorithm>using namespace std;struct stu{  int ge, gi,id,fina;  int apl[6];};struct sch{  int quota,lastrk; //mark for lastrk  vector<int> stid;};int n, m, k;stu st[40005];sch sh[105];bool cmp(const stu &s1,const stu &s2){  if (s1.fina != s2.fina)    return s1.fina> s2.fina;  else return s1.ge > s2.ge;}int main(){    cin >> n >> m >> k;  for (int i = 0; i < m; ++i)  {    scanf("%d", &sh[i].quota);  }  for (int i = 0; i < n; ++i)  {    scanf("%d%d",&st[i].ge,&st[i].gi);    st[i].fina = (st[i].ge + st[i].gi);    for (int j = 0; j < k; ++j)    {      scanf("%d",&st[i].apl[j]);    }    st[i].id = i;  }  sort(st,st+n,cmp);  for (int i = 0; i < n; ++i)  {    stu &curst = st[i];    for (int j = 0; j < k; ++j)    {      int &schid = curst.apl[j];      sch &cursch = sh[schid];      if (cursch.quota>0         || (curst.ge == st[cursch.lastrk].ge && curst.fina == st[cursch.lastrk].fina))      {        cursch.stid.push_back(curst.id);        cursch.lastrk = i;        --cursch.quota;        break;      }    }  }  for (int i = 0; i < m; ++i)  {    vector<int> &vecid = sh[i].stid;    sort(vecid.begin(), vecid.end());    if (vecid.size()) printf("%d",vecid[0]);    for (int j = 1; j < vecid.size(); ++j)      printf(" %d",vecid[j]);    printf("\n");  }  system("pause");  return 0;}