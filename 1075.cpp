/* 1075. PAT Judge (25) *//* Accepted! 2016-9-2 16:22 *//* it's about reading compehension... *//* expecially the last paragraph..*/#include<iostream>#include<vector>#include<algorithm>using namespace std;typedef struct Node{	int id;	int score[6]; //starting from 1	int sum;	int perfTime;}Node;bool cmp(const Node &a,const Node &b){	if(a.sum!=b.sum)		return a.sum>b.sum;	else if(a.perfTime!=b.perfTime)		return a.perfTime>b.perfTime;	else return a.id<b.id;}int main(){	freopen("D:\\in.txt","r",stdin);	int n,k,m;	int p[6];	scanf("%d%d%d",&n,&k,&m);	vector<Node> vec;	vec.resize(n+1);	int uid,pid,score;	for(int i=1;i<=k;i++) scanf("%d",&p[i]);	for(int i=0;i<=n;i++)		for(int t=0;t<=k;t++) 		 vec[i].score[t]=-2;	while(m--)	{	    scanf("%d%d%d",&uid,&pid,&score);		if(vec[uid].score[pid]<score)		{			vec[uid].score[pid]=score;		}		//if(score==-1) vec[uid].score[pid]=0;	}	for(int i=1;i<=n;i++)	{		vec[i].perfTime=0;		vec[i].sum=0;		vec[i].id=i;		for(int j=1;j<=k;j++)		{			if(vec[i].score[j]!=-1&&vec[i].score[j]!=-2) vec[i].sum+=vec[i].score[j];  			if(p[j]==vec[i].score[j])				vec[i].perfTime++;		}	}	sort(vec.begin()+1,vec.end(),cmp);	int cur=-1;	int r;	for(int i=1;i<=n;i++)	{		if(vec[i].sum!=cur) {			r=i;			cur=vec[i].sum;		}		if(vec[i].sum>0){			printf("%d %05d %d",r,vec[i].id,vec[i].sum);			for(int j=1;j<=k;j++)			{				if(vec[i].score[j]!=-2&&vec[i].score[j]!=-1)  					printf(" %d",vec[i].score[j]);				else if(vec[i].score[j]==-2) printf(" -");				else if(vec[i].score[j]==-1) printf(" 0");			}			printf("\n");		}		if(vec[i].sum<=0)		{			bool flag=false;			for(int u=1;u<=k;u++)			{				if(vec[i].score[u]>-1)					flag=true;			}			if(flag)			{				printf("%d %05d %d",r,vec[i].id,vec[i].sum);			  for(int j=1;j<=k;j++)			   {				 if(vec[i].score[j]!=-2&&vec[i].score[j]!=-1)  					printf(" %d",vec[i].score[j]);				 else if(vec[i].score[j]==-2) printf(" -");				 else if(vec[i].score[j]==-1) printf(" 0");			   }			 printf("\n");			}		}	}	return 0;}