/* 1081. Rational Sum (20) *//* be aware of the floting error when do gcd *//* pay attention to the mark line */#include<iostream>#include<vector>using namespace std;long int iabs(long int x){	if(x<0) return 0-x;	else return x;}long int gcd(long int x,long int y){	  long int a,b;	  a=max(x,y);	  b=min(x,y);	  if(b==0) return 0;	  long int r=a%b;	  while(r!=0)	  {		  a=b;		  b=r;		  r=a%b;	  }	  return b;}int main(){	freopen("D:\\in.txt","r",stdin);	int n;	cin>>n;    long int res1,res2;	res1=0;	res2=1;	long int a,b;	while(n--)	{		 scanf("%ld/%ld",&a,&b);		 long int temp1,temp2,temp3;		 temp1=res1*b+res2*a;		 temp2=res2*b;		 temp3=gcd(temp1,temp2);		 /*mark */		 if(temp3!=0)		 {		  res1=temp1/temp3;		  res2=temp2/temp3; 		 }		 else{			res1=0;           res2=1;					 }		 /* mark */	}     if((res1*res2<0&&res1>0)||(res1*res2>0&&res1<0)){		 res1=0-res1;		 res2=0-res2;	 }	 if(iabs(res1)>=iabs(res2)||res1==0)	 {		 if(res1%res2==0) cout<<res1/res2<<endl;		 else{			 long int t=res1/res2;			 cout<<t<<" "<<res1-t*res2<<"/"<<res2<<endl;		 }	 }	 else cout<<res1<<"/"<<res2<<endl;	return 0;}