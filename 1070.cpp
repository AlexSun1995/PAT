/* PAT 1070 Mooncakes *//* running for PAT! *//* 23/25 one case wrong *//* 25/25 accepted,change data type of 'amount'  *//* from inr to float *//* 2016-7-28 */#include<vector>#include<algorithm>#include<iostream>using namespace std;typedef struct Node{	float amount;	float total_price;	float avg_price;}Node;bool comp(const Node &a,const Node &b){	return a.avg_price>b.avg_price;}int main(){	//freopen("D:\\in.txt","r",stdin);	int n,d;	scanf("%d%d",&n,&d);	vector<Node> vec(n);	int amount;	float price;	for(int i=0;i<n;i++){	   scanf("%f",&vec[i].amount);	}	for(int i=0;i<n;i++){		scanf("%f",&vec[i].total_price);		vec[i].avg_price=vec[i].total_price/(1.0*vec[i].amount);	}	sort(vec.begin(),vec.end(),comp);	float cur_sum=0.0;	float cur_profit=0.0;	for(int i=0;i<n;i++){		cur_sum+=vec[i].amount;		cur_profit+=vec[i].total_price;		//already much more than the amount that needed		if(cur_sum>=d){			cur_profit-=(cur_sum-d)*vec[i].avg_price;			break;		}	}	printf("%.2f\n",cur_profit);	return 0;}