/* patID:1024 Palindromic Number *//* starting time: 2016-7-16 20:03 *//* Ac time: 2016-7-16 21:21 *//* The main problem is avoding segement error *//* when using a vector index before allocate enough space*/#include<iostream>#include<stack>#include<vector>using namespace std;bool judge(const vector<int> &vec){	int p;	int r_p;	bool yes=true;	for(p=0,r_p=vec.size()-1-p;p<vec.size()&&r_p>=0;p++,r_p--){		if(vec[p]!=vec[r_p]){			yes=false;			break;		}	}	return yes;}void magicAdd(vector<int> &vec){	vector<int> vec1(vec);	vector<int> vec2;	vec2.resize(vec.size());	stack<int> result;	for(int i=vec.size()-1;i>=0;i--) vec2[vec.size()-1-i]=vec[i];	int len=vec.size();	int num;	int extra=0;	for(int i=len-1;i>=0;i--){		num=vec1[i]+vec2[i];		if(extra+num>=10){			result.push(extra+num-10);			extra=(extra+num)/10;		}		else{			result.push(extra+num);			extra=0;		}	}	if(extra>0) result.push(extra);	vec.clear();	while(!result.empty()){		vec.push_back(result.top());		result.pop();	}}int main(){	char s[12];	//int N[12];	vector<int> vec;	int K;	scanf("%s",s);	scanf("%d",&K);	int i;	int timecount=0;	for(i=0;s[i]!='\0';i++){		vec.push_back(s[i]-'0');	}		 while(timecount<K&&!judge(vec)){		magicAdd(vec);	    timecount++;	 }	for(int i=0;i<vec.size();i++) printf("%d\n",vec[i]);	printf("%d\n",timecount);	return 0;}