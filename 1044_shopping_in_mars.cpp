/* Shopping in Mars patID:1044 *//* startiong time:2016-6-14 23:50 *//* Run time Error...19/25 *//* this is the O(2) version I guess you  *//* can do some work to change it into O(1).. */#include<iostream>#include<vector>#include<algorithm>#include<list>using namespace std;typedef struct info{	int start;     int end;	int dis;	info(int _start,int _end,int _dis):start(_start),end(_end),dis(_dis){}}info;bool myComp(const info &a,const info &b){   if(a.dis!=b.dis) return a.dis<b.dis;   else return a.start<b.start;}int main(){  //freopen("D:\\in.txt","r",stdin);  int N,M;  cin>>N>>M;  vector<int> vec(N+1);  vector<pair<int,int> > result;  vector<info> result2;  bool Exist = false;  int thisSum;  int minDis=100000;  for(int i=1;i<=N;i++) scanf("%d",&vec[i]);  for(int i=1;i<=N;i++){	  thisSum = 0;	  for(int j=i;j<=N;j++){		  thisSum+=vec[j];		  if(thisSum==M){			result.push_back(make_pair(i,j));            Exist = true;            break;					  }		  else if(thisSum>M && !Exist){			if(thisSum-M<=minDis){				minDis = thisSum - M;				result2.push_back(info(i,j,thisSum));				//cout<<"*****"<<i<<"->"<<j<<" "<<thisSum<<endl;			}            break;					}	  }    }	if(Exist){		//sort(result.begin(),result.end());		vector<pair<int,int> >::iterator iter = result.begin();	    for(;iter!=result.end();iter++){			cout<<iter->first<<"-"<<iter->second<<endl;		}		}	else{		//sort(result2.begin(),result2.end(),myComp);		vector<info>::iterator iter1 = result2.begin();		int min = (iter1+result2.size()-1)->dis;		for(;iter1!=result2.end();iter1++){			if(iter1->dis!=min) continue;			else cout<<iter1->start<<"-"<<iter1->end<<endl;		}		}	return 0;}